// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Test_Week6.Context;

namespace Test_Week6.Migrations
{
    [DbContext(typeof(InsuranceContext))]
    [Migration("20210625081948_primamigration")]
    partial class primamigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Test_Week6.Models.CarPolicy", b =>
                {
                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarPolicy_type")
                        .HasColumnType("int");

                    b.Property<string>("ClientCF")
                        .HasColumnType("nchar(16)");

                    b.Property<DateTime>("DateStipulates")
                        .HasColumnType("datetime2");

                    b.Property<float>("InsuredAmmount")
                        .HasColumnType("real");

                    b.Property<float>("MonthlyInstallment")
                        .HasColumnType("real");

                    b.HasKey("Number");

                    b.HasIndex("ClientCF");

                    b.ToTable("Car Policy");

                    b.HasDiscriminator<int>("CarPolicy_type").HasValue(1);
                });

            modelBuilder.Entity("Test_Week6.Models.Client", b =>
                {
                    b.Property<string>("CF")
                        .HasMaxLength(16)
                        .HasColumnType("nchar(16)")
                        .IsFixedLength(true);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CF");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("Test_Week6.Models.Life", b =>
                {
                    b.HasBaseType("Test_Week6.Models.CarPolicy");

                    b.Property<int>("YearsInsured")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue(4);
                });

            modelBuilder.Entity("Test_Week6.Models.RCauto", b =>
                {
                    b.HasBaseType("Test_Week6.Models.CarPolicy");

                    b.Property<int>("Piston")
                        .HasColumnType("int");

                    b.Property<string>("Plate")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("Test_Week6.Models.Robbery", b =>
                {
                    b.HasBaseType("Test_Week6.Models.CarPolicy");

                    b.Property<int>("PercentageCovered")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("Test_Week6.Models.CarPolicy", b =>
                {
                    b.HasOne("Test_Week6.Models.Client", "Client")
                        .WithMany("CarPolicies")
                        .HasForeignKey("ClientCF");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Test_Week6.Models.Client", b =>
                {
                    b.Navigation("CarPolicies");
                });
#pragma warning restore 612, 618
        }
    }
}
